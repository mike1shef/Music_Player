<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.hyperskill.musicplayer.Stage3UnitTest" tests="15" skipped="0" failures="7" errors="0" timestamp="2024-02-19T17:11:38" hostname="Kristinas-MacBook-Pro.local" time="18.728">
  <properties/>
  <testcase name="checkImgButtonTriggersMediaPlayerOnListItem" classname="org.hyperskill.musicplayer.Stage3UnitTest" time="9.306"/>
  <testcase name="checkControllerTriggersMediaPlayerOnDefaultItem" classname="org.hyperskill.musicplayer.Stage3UnitTest" time="1.889"/>
  <testcase name="checkSeekBarChangeAfterMusicEnd" classname="org.hyperskill.musicplayer.Stage3UnitTest" time="0.803">
    <failure message="java.lang.AssertionError: It should be possible to change controllerSeekBar progress as user after a music ends and resume playing the song. On mediaPlayer isPlaying expected:&lt;true&gt; but was:&lt;false&gt;" type="java.lang.AssertionError">java.lang.AssertionError: It should be possible to change controllerSeekBar progress as user after a music ends and resume playing the song. On mediaPlayer isPlaying expected:&lt;true&gt; but was:&lt;false&gt;
	at org.junit.Assert.fail(Assert.java:89)
	at org.junit.Assert.failNotEquals(Assert.java:835)
	at org.junit.Assert.assertEquals(Assert.java:120)
	at org.hyperskill.musicplayer.internals.MusicPlayerUnitTests.assertController(MusicPlayerUnitTests.kt:483)
	at org.hyperskill.musicplayer.internals.MusicPlayerUnitTests.assertControllerPlay(MusicPlayerUnitTests.kt:469)
	at org.hyperskill.musicplayer.Stage3UnitTest$checkSeekBarChangeAfterMusicEnd$1.invoke(Stage3UnitTest.kt:371)
	at org.hyperskill.musicplayer.Stage3UnitTest$checkSeekBarChangeAfterMusicEnd$1.invoke(Stage3UnitTest.kt:346)
	at org.hyperskill.musicplayer.internals.AbstractUnitTest.testActivity(AbstractUnitTest.kt:84)
	at org.hyperskill.musicplayer.internals.AbstractUnitTest.testActivity$default(AbstractUnitTest.kt:75)
	at org.hyperskill.musicplayer.Stage3UnitTest.checkSeekBarChangeAfterMusicEnd(Stage3UnitTest.kt:346)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.robolectric.RobolectricTestRunner$HelperTestRunner$1.evaluate(RobolectricTestRunner.java:591)
	at org.robolectric.internal.SandboxTestRunner$2.lambda$evaluate$0(SandboxTestRunner.java:274)
	at org.robolectric.internal.bytecode.Sandbox.lambda$runOnMainThread$0(Sandbox.java:88)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
</failure>
  </testcase>
  <testcase name="checkSongChange" classname="org.hyperskill.musicplayer.Stage3UnitTest" time="1.423"/>
  <testcase name="checkImgButtonPlayAfterMusicEnd" classname="org.hyperskill.musicplayer.Stage3UnitTest" time="0.843">
    <failure message="java.lang.AssertionError: It should be possible to play again a song after song end. On mediaPlayer isPlaying expected:&lt;true&gt; but was:&lt;false&gt;" type="java.lang.AssertionError">java.lang.AssertionError: It should be possible to play again a song after song end. On mediaPlayer isPlaying expected:&lt;true&gt; but was:&lt;false&gt;
	at org.junit.Assert.fail(Assert.java:89)
	at org.junit.Assert.failNotEquals(Assert.java:835)
	at org.junit.Assert.assertEquals(Assert.java:120)
	at org.hyperskill.musicplayer.internals.MusicPlayerUnitTests.assertController(MusicPlayerUnitTests.kt:483)
	at org.hyperskill.musicplayer.internals.MusicPlayerUnitTests.assertControllerPlay(MusicPlayerUnitTests.kt:469)
	at org.hyperskill.musicplayer.Stage3UnitTest$checkImgButtonPlayAfterMusicEnd$1$1.invoke(Stage3UnitTest.kt:440)
	at org.hyperskill.musicplayer.Stage3UnitTest$checkImgButtonPlayAfterMusicEnd$1$1.invoke(Stage3UnitTest.kt:423)
	at org.hyperskill.musicplayer.internals.MusicPlayerUnitTests.assertSingleListItem(MusicPlayerUnitTests.kt:258)
	at org.hyperskill.musicplayer.Stage3UnitTest$checkImgButtonPlayAfterMusicEnd$1.invoke(Stage3UnitTest.kt:423)
	at org.hyperskill.musicplayer.Stage3UnitTest$checkImgButtonPlayAfterMusicEnd$1.invoke(Stage3UnitTest.kt:409)
	at org.hyperskill.musicplayer.internals.AbstractUnitTest.testActivity(AbstractUnitTest.kt:84)
	at org.hyperskill.musicplayer.internals.AbstractUnitTest.testActivity$default(AbstractUnitTest.kt:75)
	at org.hyperskill.musicplayer.Stage3UnitTest.checkImgButtonPlayAfterMusicEnd(Stage3UnitTest.kt:409)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.robolectric.RobolectricTestRunner$HelperTestRunner$1.evaluate(RobolectricTestRunner.java:591)
	at org.robolectric.internal.SandboxTestRunner$2.lambda$evaluate$0(SandboxTestRunner.java:274)
	at org.robolectric.internal.bytecode.Sandbox.lambda$runOnMainThread$0(Sandbox.java:88)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
</failure>
  </testcase>
  <testcase name="checkSeekBarChangeWhilePlaying" classname="org.hyperskill.musicplayer.Stage3UnitTest" time="0.248"/>
  <testcase name="checkSeekBarAfterPause" classname="org.hyperskill.musicplayer.Stage3UnitTest" time="0.42"/>
  <testcase name="checkMusicEnd" classname="org.hyperskill.musicplayer.Stage3UnitTest" time="0.363"/>
  <testcase name="checkLoadPlaylistKeepsPlayingCurrentSelectedSong" classname="org.hyperskill.musicplayer.Stage3UnitTest" time="0.979">
    <failure message="java.lang.AssertionError: A song should remain playing after list load if present on the loaded list. On mediaPlayer isPlaying expected:&lt;true&gt; but was:&lt;false&gt;" type="java.lang.AssertionError">java.lang.AssertionError: A song should remain playing after list load if present on the loaded list. On mediaPlayer isPlaying expected:&lt;true&gt; but was:&lt;false&gt;
	at org.junit.Assert.fail(Assert.java:89)
	at org.junit.Assert.failNotEquals(Assert.java:835)
	at org.junit.Assert.assertEquals(Assert.java:120)
	at org.hyperskill.musicplayer.internals.MusicPlayerUnitTests.assertController(MusicPlayerUnitTests.kt:483)
	at org.hyperskill.musicplayer.internals.MusicPlayerUnitTests.assertControllerPlay(MusicPlayerUnitTests.kt:469)
	at org.hyperskill.musicplayer.Stage3UnitTest$checkLoadPlaylistKeepsPlayingCurrentSelectedSong$1$2.invoke(Stage3UnitTest.kt:646)
	at org.hyperskill.musicplayer.Stage3UnitTest$checkLoadPlaylistKeepsPlayingCurrentSelectedSong$1$2.invoke(Stage3UnitTest.kt:632)
	at org.hyperskill.musicplayer.internals.MusicPlayerUnitTests.assertListItems(MusicPlayerUnitTests.kt:211)
	at org.hyperskill.musicplayer.Stage3UnitTest$checkLoadPlaylistKeepsPlayingCurrentSelectedSong$1.invoke(Stage3UnitTest.kt:632)
	at org.hyperskill.musicplayer.Stage3UnitTest$checkLoadPlaylistKeepsPlayingCurrentSelectedSong$1.invoke(Stage3UnitTest.kt:591)
	at org.hyperskill.musicplayer.internals.AbstractUnitTest.testActivity(AbstractUnitTest.kt:84)
	at org.hyperskill.musicplayer.internals.AbstractUnitTest.testActivity$default(AbstractUnitTest.kt:75)
	at org.hyperskill.musicplayer.Stage3UnitTest.checkLoadPlaylistKeepsPlayingCurrentSelectedSong(Stage3UnitTest.kt:591)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.robolectric.RobolectricTestRunner$HelperTestRunner$1.evaluate(RobolectricTestRunner.java:591)
	at org.robolectric.internal.SandboxTestRunner$2.lambda$evaluate$0(SandboxTestRunner.java:274)
	at org.robolectric.internal.bytecode.Sandbox.lambda$runOnMainThread$0(Sandbox.java:88)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
</failure>
  </testcase>
  <testcase name="checkControllerKeepsStateAfterCancelAddPlaylist" classname="org.hyperskill.musicplayer.Stage3UnitTest" time="0.421">
    <failure message="java.lang.AssertionError: Wrong state of controller view after click on addPlaylistBtnCancel On controllerSeekBar progress expected:&lt;106&gt; but was:&lt;0&gt;" type="java.lang.AssertionError">java.lang.AssertionError: Wrong state of controller view after click on addPlaylistBtnCancel On controllerSeekBar progress expected:&lt;106&gt; but was:&lt;0&gt;
	at org.junit.Assert.fail(Assert.java:89)
	at org.junit.Assert.failNotEquals(Assert.java:835)
	at org.junit.Assert.assertEquals(Assert.java:120)
	at org.hyperskill.musicplayer.internals.MusicPlayerUnitTests$ControllerViews.assertControllerState(MusicPlayerUnitTests.kt:450)
	at org.hyperskill.musicplayer.Stage3UnitTest$checkControllerKeepsStateAfterCancelAddPlaylist$1.invoke(Stage3UnitTest.kt:963)
	at org.hyperskill.musicplayer.Stage3UnitTest$checkControllerKeepsStateAfterCancelAddPlaylist$1.invoke(Stage3UnitTest.kt:932)
	at org.hyperskill.musicplayer.internals.AbstractUnitTest.testActivity(AbstractUnitTest.kt:84)
	at org.hyperskill.musicplayer.internals.AbstractUnitTest.testActivity$default(AbstractUnitTest.kt:75)
	at org.hyperskill.musicplayer.Stage3UnitTest.checkControllerKeepsStateAfterCancelAddPlaylist(Stage3UnitTest.kt:932)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.robolectric.RobolectricTestRunner$HelperTestRunner$1.evaluate(RobolectricTestRunner.java:591)
	at org.robolectric.internal.SandboxTestRunner$2.lambda$evaluate$0(SandboxTestRunner.java:274)
	at org.robolectric.internal.bytecode.Sandbox.lambda$runOnMainThread$0(Sandbox.java:88)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
</failure>
  </testcase>
  <testcase name="checkPlayAfterMusicEnd" classname="org.hyperskill.musicplayer.Stage3UnitTest" time="0.48">
    <failure message="java.lang.AssertionError: It should be possible to play again a song after song end. On mediaPlayer isPlaying expected:&lt;true&gt; but was:&lt;false&gt;" type="java.lang.AssertionError">java.lang.AssertionError: It should be possible to play again a song after song end. On mediaPlayer isPlaying expected:&lt;true&gt; but was:&lt;false&gt;
	at org.junit.Assert.fail(Assert.java:89)
	at org.junit.Assert.failNotEquals(Assert.java:835)
	at org.junit.Assert.assertEquals(Assert.java:120)
	at org.hyperskill.musicplayer.internals.MusicPlayerUnitTests.assertController(MusicPlayerUnitTests.kt:483)
	at org.hyperskill.musicplayer.internals.MusicPlayerUnitTests.assertControllerPlay(MusicPlayerUnitTests.kt:469)
	at org.hyperskill.musicplayer.Stage3UnitTest$checkPlayAfterMusicEnd$1.invoke(Stage3UnitTest.kt:401)
	at org.hyperskill.musicplayer.Stage3UnitTest$checkPlayAfterMusicEnd$1.invoke(Stage3UnitTest.kt:379)
	at org.hyperskill.musicplayer.internals.AbstractUnitTest.testActivity(AbstractUnitTest.kt:84)
	at org.hyperskill.musicplayer.internals.AbstractUnitTest.testActivity$default(AbstractUnitTest.kt:75)
	at org.hyperskill.musicplayer.Stage3UnitTest.checkPlayAfterMusicEnd(Stage3UnitTest.kt:379)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.robolectric.RobolectricTestRunner$HelperTestRunner$1.evaluate(RobolectricTestRunner.java:591)
	at org.robolectric.internal.SandboxTestRunner$2.lambda$evaluate$0(SandboxTestRunner.java:274)
	at org.robolectric.internal.bytecode.Sandbox.lambda$runOnMainThread$0(Sandbox.java:88)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
</failure>
  </testcase>
  <testcase name="checkSeekBarAfterStop" classname="org.hyperskill.musicplayer.Stage3UnitTest" time="0.319"/>
  <testcase name="checkSeekBarBeforePlaying" classname="org.hyperskill.musicplayer.Stage3UnitTest" time="0.284"/>
  <testcase name="checkLoadPlaylistChangesSongIfCurrentSelectedSongNotInPlaylist" classname="org.hyperskill.musicplayer.Stage3UnitTest" time="0.516">
    <failure message="java.lang.AssertionError: A song should remain playing after adding playlist. On mediaPlayer isPlaying expected:&lt;true&gt; but was:&lt;false&gt;" type="java.lang.AssertionError">java.lang.AssertionError: A song should remain playing after adding playlist. On mediaPlayer isPlaying expected:&lt;true&gt; but was:&lt;false&gt;
	at org.junit.Assert.fail(Assert.java:89)
	at org.junit.Assert.failNotEquals(Assert.java:835)
	at org.junit.Assert.assertEquals(Assert.java:120)
	at org.hyperskill.musicplayer.internals.MusicPlayerUnitTests.assertController(MusicPlayerUnitTests.kt:483)
	at org.hyperskill.musicplayer.internals.MusicPlayerUnitTests.assertControllerPlay(MusicPlayerUnitTests.kt:469)
	at org.hyperskill.musicplayer.Stage3UnitTest$checkLoadPlaylistChangesSongIfCurrentSelectedSongNotInPlaylist$1$2.invoke(Stage3UnitTest.kt:819)
	at org.hyperskill.musicplayer.Stage3UnitTest$checkLoadPlaylistChangesSongIfCurrentSelectedSongNotInPlaylist$1$2.invoke(Stage3UnitTest.kt:806)
	at org.hyperskill.musicplayer.internals.MusicPlayerUnitTests.assertListItems(MusicPlayerUnitTests.kt:211)
	at org.hyperskill.musicplayer.Stage3UnitTest$checkLoadPlaylistChangesSongIfCurrentSelectedSongNotInPlaylist$1.invoke(Stage3UnitTest.kt:806)
	at org.hyperskill.musicplayer.Stage3UnitTest$checkLoadPlaylistChangesSongIfCurrentSelectedSongNotInPlaylist$1.invoke(Stage3UnitTest.kt:763)
	at org.hyperskill.musicplayer.internals.AbstractUnitTest.testActivity(AbstractUnitTest.kt:84)
	at org.hyperskill.musicplayer.internals.AbstractUnitTest.testActivity$default(AbstractUnitTest.kt:75)
	at org.hyperskill.musicplayer.Stage3UnitTest.checkLoadPlaylistChangesSongIfCurrentSelectedSongNotInPlaylist(Stage3UnitTest.kt:763)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.robolectric.RobolectricTestRunner$HelperTestRunner$1.evaluate(RobolectricTestRunner.java:591)
	at org.robolectric.internal.SandboxTestRunner$2.lambda$evaluate$0(SandboxTestRunner.java:274)
	at org.robolectric.internal.bytecode.Sandbox.lambda$runOnMainThread$0(Sandbox.java:88)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
</failure>
  </testcase>
  <testcase name="checkCancelAddPlaylistKeepsPlayingCurrentSelectedSong" classname="org.hyperskill.musicplayer.Stage3UnitTest" time="0.434">
    <failure message="java.lang.AssertionError: A song should remain playing after list load if present on the loaded list. On mediaPlayer isPlaying expected:&lt;true&gt; but was:&lt;false&gt;" type="java.lang.AssertionError">java.lang.AssertionError: A song should remain playing after list load if present on the loaded list. On mediaPlayer isPlaying expected:&lt;true&gt; but was:&lt;false&gt;
	at org.junit.Assert.fail(Assert.java:89)
	at org.junit.Assert.failNotEquals(Assert.java:835)
	at org.junit.Assert.assertEquals(Assert.java:120)
	at org.hyperskill.musicplayer.internals.MusicPlayerUnitTests.assertController(MusicPlayerUnitTests.kt:483)
	at org.hyperskill.musicplayer.internals.MusicPlayerUnitTests.assertControllerPlay(MusicPlayerUnitTests.kt:469)
	at org.hyperskill.musicplayer.Stage3UnitTest$checkCancelAddPlaylistKeepsPlayingCurrentSelectedSong$1$2.invoke(Stage3UnitTest.kt:553)
	at org.hyperskill.musicplayer.Stage3UnitTest$checkCancelAddPlaylistKeepsPlayingCurrentSelectedSong$1$2.invoke(Stage3UnitTest.kt:539)
	at org.hyperskill.musicplayer.internals.MusicPlayerUnitTests.assertListItems(MusicPlayerUnitTests.kt:211)
	at org.hyperskill.musicplayer.Stage3UnitTest$checkCancelAddPlaylistKeepsPlayingCurrentSelectedSong$1.invoke(Stage3UnitTest.kt:539)
	at org.hyperskill.musicplayer.Stage3UnitTest$checkCancelAddPlaylistKeepsPlayingCurrentSelectedSong$1.invoke(Stage3UnitTest.kt:499)
	at org.hyperskill.musicplayer.internals.AbstractUnitTest.testActivity(AbstractUnitTest.kt:84)
	at org.hyperskill.musicplayer.internals.AbstractUnitTest.testActivity$default(AbstractUnitTest.kt:75)
	at org.hyperskill.musicplayer.Stage3UnitTest.checkCancelAddPlaylistKeepsPlayingCurrentSelectedSong(Stage3UnitTest.kt:499)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.robolectric.RobolectricTestRunner$HelperTestRunner$1.evaluate(RobolectricTestRunner.java:591)
	at org.robolectric.internal.SandboxTestRunner$2.lambda$evaluate$0(SandboxTestRunner.java:274)
	at org.robolectric.internal.bytecode.Sandbox.lambda$runOnMainThread$0(Sandbox.java:88)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
</failure>
  </testcase>
  <system-out><![CDATA[Called loadFromPath(/system/framework/framework-res.apk, true); mode=binary sdk=29
resources.arsc in APK '/Users/mikhailshauchenka/.m2/repository/org/robolectric/android-all-instrumented/10-robolectric-5803371-i3/android-all-instrumented-10-robolectric-5803371-i3.jar' is compressed.
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
